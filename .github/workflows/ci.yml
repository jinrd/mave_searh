# 워크플로우의 이름을 "Java CI with Maven"으로 정합니다.
name: Java CI with Maven

# 이 워크플로우가 언제 실행될지를 결정합니다.
on:
  # "main" 또는 "master" 브랜치에 코드가 push 될 때 실행됩니다.
  push:
    branches: [ "main", "master" ]
  # "main" 또는 "master" 브랜치를 대상으로 pull request가 생성될 때 실행됩니다.
  pull_request:
    branches: [ "main", "master" ]

# 실행될 작업(job)들을 정의합니다.
jobs:
  # "build" 라는 이름의 작업을 정의합니다.
  build:
    # 이 작업이 실행될 가상 머신의 환경을 지정합니다. (최신 우분투 리눅스)
    runs-on: ubuntu-latest

    # 실제 작업 단계(step)들을 정의합니다.
    steps:
      # 1. GitHub 저장소의 코드를 가상 머신으로 내려받습니다. (Checkout)
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Java 17 버전을 설치합니다.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3. Maven Wrapper(mvnw) 파일에 실행 권한을 부여합니다. (리눅스 환경이므로 필요)
      - name: Grant execute permission for mvnw
        run: chmod +x mvnw

      # 4. Maven으로 프로젝트를 테스트하고 빌드(패키징)합니다.
      - name: Build with Maven
        run: ./mvnw clean install -DskipTests